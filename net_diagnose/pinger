#!/bin/bash

if [ -z $1 ]; then exit 3; fi

if [[ -f check_ip ]] 
then 
	./check_ip $1
	if [ $? -eq 0 ]; 
	then 
		host=$1; 
	elif [[ -f dns_dig ]];
	then
		host=$( ./dns_dig $1 )
		./check_ip $host	
		if [ $? -ne 0 ]; then exit 2; fi
	fi
fi

if [ -z $2 ]; 
then
	PING_TIMES=8 
elif [[ $2 =~ ^[0-9]{1,3}$ ]]; 
then 
	PING_TIMES=$2; 
else
	PING_TIMES=8;
fi

loss=0
delay=0
times=0
repeat=true

until [ $repeat == 'false' ]
do	
	ping_results=$(ping -c 1 $host 2>/dev/null )	
	l=$( echo $ping_results | grep loss | sed -E -e "s/(.*) ([0-9]+)(\\.*[0-9]*)%(.*)/\2\3/g")
	d=$( echo $ping_results | grep mdev | sed -E -e "s/(.*)= (.*)\/(.*)\/(.*)\/(.*) ms/\3/g")

	if [[ $l =~ ^$ ]] || [[ $d =~ ^$ ]]; then repeat=false; fi

	let loss+=l
	if [[ "$d" != ""  ]]; then delay=$( awk "BEGIN {print ($delay+$d)}" ); fi
	
	let times+=1
	f=$( awk "BEGIN {print ($loss/100)}" )
	if [ $times -ge $PING_TIMES ] || [ $f -eq $times ]; then repeat=false; fi
done

if [ $times -eq 1 ]; then 
	loss=100
	delay=2000
else
	loss=$( awk "BEGIN {print ($loss/$times)}" )
	delay=$( awk "BEGIN {print ($delay/$times)}" )
fi

echo $loss
echo $delay 

if [ $loss == $delay ]; then exit 1; fi
